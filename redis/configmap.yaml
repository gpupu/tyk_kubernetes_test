apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
data:
  redis.conf: |
    #test1
    cluster-enabled yes
    cluster-require-full-coverage no
    cluster-node-timeout 15000
    cluster-config-file /data/nodes.conf
    cluster-migration-barrier 1
    appendonly yes
    protected-mode no   
  update-node.sh: |
    #!/bin/sh

    cat /data/nodes.conf

    REDIS_NODES="/data/nodes.conf"
    sed -i -e "/myself/ s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/${POD_IP}/" ${REDIS_NODES}

    cat /data/nodes.conf

    cat /data/meet-nodes.log
    
    nohup sh -c "/etc/redis/meet-nodes.sh" > /data/meet-nodes.log 2>&1 &
    exec "$@"
  meet-nodes.sh: |
    #!/bin/sh

    /etc/redis/wait-for-redis.sh

    file="/data/nodes.conf"
    cluster_size="wc -l < $file"

    size=$(eval "$cluster_size")

    if [ $size -gt 2 ] ; then
      /etc/redis/wait-for-nodes-ip.sh
      /etc/redis/redis-meet-nodes.sh
    fi
    
  redis-meet-nodes.sh: |
    #!/bin/sh
    echo "Meeting nodes"

    redis-cli cluster meet $(getent hosts redis-cluster-0.redis-cluster.redis.svc.cluster.local | awk '{ print $1 }') 6379
    redis-cli cluster meet $(getent hosts redis-cluster-1.redis-cluster.redis.svc.cluster.local | awk '{ print $1 }') 6379
    redis-cli cluster meet $(getent hosts redis-cluster-2.redis-cluster.redis.svc.cluster.local | awk '{ print $1 }') 6379
    redis-cli cluster meet $(getent hosts redis-cluster-3.redis-cluster.redis.svc.cluster.local | awk '{ print $1 }') 6379
    redis-cli cluster meet $(getent hosts redis-cluster-4.redis-cluster.redis.svc.cluster.local | awk '{ print $1 }') 6379
    redis-cli cluster meet $(getent hosts redis-cluster-5.redis-cluster.redis.svc.cluster.local | awk '{ print $1 }') 6379
  wait-for-redis.sh: |
    #!/bin/sh

    RETRIES=0
    ANSWER="$(echo "NO_ANSWER")"
    CORRECT_ANSWER="$(echo PONG)"
    while [ $RETRIES -lt 10 ] && [ $CORRECT_ANSWER != $ANSWER ]
    do
      RETRIES=$(($RETRIES+1))
      sleep $RETRIES
      ANSWER="$(redis-cli ping | tr -d ' ')"
      echo "Waiting for Redis to response with PONG"
    done

    if [ $RETRIES -ge 10 ]
    then
      echo "Redis is down"
    else
      echo "Redis is up and running and response with PONG"
    fi
  
  wait-for-nodes-ip.sh: |
    #!/bin/sh

    APP_NAME="redis-cluster"
    NAMESPACE="redis"

    NODE_NUMBER=0
    MAX_NODES=6
    RETRIES=0
    
    while [ $NODE_NUMBER -lt $MAX_NODES ]
    do
      CURRENT_NODE_IP=""
      while [ "$CURRENT_NODE_IP" = "" ] && [ $RETRIES -lt 10 ]
      do
        echo Waiting "$RETRIES" seconds…
        RETRIES=$(($RETRIES+1))
        sleep $RETRIES
        echo "Requesting node $NODE_NUMBER ip…"
        CURRENT_NODE_IP="$(getent hosts $APP_NAME-$NODE_NUMBER.$APP_NAME.$NAMESPACE.svc.cluster.local | awk '{ print $1 }')"
      done
      echo Ip for node "$NODE_NUMBER" = "$CURRENT_NODE_IP"
      NODE_NUMBER=$(($NODE_NUMBER+1))
      RETRIES=0
    done